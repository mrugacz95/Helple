package pl.mrugas.helple.domain

import android.util.Log
import pl.mrugas.helple.GameViewModel
import pl.mrugas.helple.data.DbWord
import pl.mrugas.helple.data.LetterOption
import pl.mrugas.helple.data.QueryBuilder
import pl.mrugas.helple.data.WordDao
import pl.mrugas.helple.ui.GameState

class ExploreExploitSolver : Solver {
    override suspend fun guessNewWord(
        gameState: GameState,
        wordDao: WordDao,
        updateProgress: (progress: Float) -> Unit
    ): DbWord? {
        val wordsLeftCount = wordDao.rawCountQuery(
            QueryBuilder.fromGameState(
                gameState,
                correctLettersOption = LetterOption.OMIT
            )
                .count()
                .build()
        )
        val knownIncludedQuery = QueryBuilder.fromGameState(gameState)
        Log.d("Solver", "Exploration rate: ${1.0f / wordsLeftCount}")
        val nextQuery =
            if (1.0f / wordsLeftCount > EXPLORATION_RATE || gameState.attempt + 1 == GameViewModel.POSSIBLE_ATTEMPTS) {
                Log.d("Solver", "Using known included")
                knownIncludedQuery
            } else {
                val knownExcludedQuery = QueryBuilder.fromGameState(gameState, correctLettersOption = LetterOption.EXCLUDE)
                val knownOmittedQuery = QueryBuilder.fromGameState(gameState, correctLettersOption = LetterOption.EXCLUDE)
                if (wordDao.rawCountQuery(knownExcludedQuery.copy().count().build()) != 0) {
                    Log.d("Solver", "Using known excluded")
                    knownExcludedQuery
                } else if (wordDao.rawCountQuery(knownOmittedQuery.copy().count().build()) != 0) {
                    Log.d("Solver", "Using known omitted")
                    knownOmittedQuery
                } else {
                    Log.d("Solver", "Using known included")
                    knownIncludedQuery
                }
            }
        return wordDao.rawQuery(nextQuery.build()).firstOrNull()
    }

    companion object {
        const val EXPLORATION_RATE = 0.05f
    }
}
